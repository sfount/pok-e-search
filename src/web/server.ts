import path from 'path'
import express from 'express'

import { fetchPokemonByName } from './services/pokemon'
const PORT = process.env.PORT || 3000

const app = express()
const api = express.Router()

const distPath = path.join(process.env.DIST_PATH || __dirname, 'dist/')

// static files generated by the parcel bundler (the Reactjs app) are served
// through static middleware
app.use('/', express.static('dist'))

api.get('/pokemon/:pokemonName', async (req, res, next) => {
  const name = req.params.pokemonName.toLowerCase()

  try {
    const pokemon = await fetchPokemonByName(name)
    res.json(pokemon)
  } catch (error) {
    console.log('Failed to fetch pokemon data', error.message)
    res.status(404).send()
  }
})

// all api routes served through top level /api path
app.use('/api', api)

// all other requests should load the entry point to the Reactjs SPA
app.get('*', (req, res, next) => {
  res.sendFile(`${distPath}/index.html`)
})

app.listen(PORT, () => console.log(`Pokesearch listening on ${PORT}`))